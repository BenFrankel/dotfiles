#!/bin/bash
# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# Copyright (C) 2014 Alexander Keller <github@nycroth.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#------------------------------------------------------------------------

audio_test="${HOME}/.config/i3/resources/volume-change.oga"

# The second parameter overrides the mixer selection
# For PulseAudio users, use "pulse"
# For Jack/Jack2 users, use "jackplug"
# For ALSA users, you may use "default" for your primary card
# or you may use hw:# where # is the number of the card desired
mixer="default"
[ -n "$(lsmod | grep pulse)" ] && mixer="pulse"
[ -n "$(lsmod | grep jack)" ] && mixer="jackplug"
mixer="${2:-$mixer}"

# The instance option sets the control to report and configure
# This defaults to the first control of your selected mixer
# For a list of the available, use `amixer -D $Your_Mixer scontrols`
scontrol="${BLOCK_INSTANCE:-$(amixer -D $mixer scontrols |
    sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p" |
    head -n1
)}"

# The first parameter sets the step to change the volume by (in %)
step=5

#------------------------------------------------------------------------

# Return "Capture" if the device is a capture device
capability() { 
    amixer -D $mixer get $scontrol | sed -n "s/  Capabilities:.*cvolume.*/Capture/p"
}

get_volume() {
    amixer -D $mixer get $scontrol $(capability)
}

format() {
    perl_filter='if (/.*\[(\d+)%\] (\[(-?\d+.\d+)dB\] )?\[(on|off)\]/)'
    perl_filter+='{CORE::say $4 eq "off" ? "\x{f026}  OFF" : '
    perl_filter+=$(echo '($1 >= 100 ? "  $1" : "  $1")')
    perl_filter+='; exit}'
    perl -ne "$perl_filter"
}

#------------------------------------------------------------------------

case $BLOCK_BUTTON in
    1) paplay $audio_test ;; # left click, play sound
    3) volume toggle ;;  # right click, mute/unmute
    4) volume up ${step} && paplay "${audio_test}" ;; # scroll up, increase
    5) volume down ${step} && paplay "${audio_test}" ;; # scroll down, decrease
esac

get_volume | format
echo
if [ -n "$(amixer -D $mixer get $scontrol | grep '\[on\]')" ]; then
    echo "#5AE234"
else
    echo "#FF2236"
fi
