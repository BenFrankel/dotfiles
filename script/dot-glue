#!/usr/bin/env bash

set -eu
# set -x

usage() {
    printf "Usage: "$0" [option [arguments]] ...

Description: Activate a dotfile symlink safely

Available options:

    No arguments
      + List glued locations        

    -i, --init
      + Initialize files and directories
    -r, --restore
      + Restore backups

    -s, --symbolic-link <dotfile> <location>
      + Activate a symbolic link
    -l, --link <dotfile> <location>
      + Activate a hard link
    -c, --copy <dotfile> <location>
      + Activate a copy 'link' -- note that the copy must be reglued whenever its dotfile is modified
"
    exit 1
}

backup_dir="${HOME}/.dotfiles/backup"
backup_files_dir="${backup_dir}/files"
backup_list="${backup_dir}/list"

[ $# -eq 0 ] && cat "$backup_list" && exit 0

_init=
_list=
_restore=
_sym=
_sym_dotfile=
_sym_location=
_copy=
_copy_dotfile=
_copy_location=
_link=
_link_dotfile=
_link_location=

while [ $# -ge 1 ]; do
    case $1 in
        -i|--init)
            _init=1
            ;;
        -l|--list)
            _list=1
            ;;
        -r|--restore)
            _restore=1
            ;;
        -s|--symbolic-link)
            _sym=1
            _sym_dotfile="$2"
            _sym_location="$3"
            shift 2
            ;;
        -c|--copy)
            _copy=1
            _copy_dotfile="$2"
            _copy_location="$3"
            shift 2
            ;;
        -l|--link)
            _link=1
            _link_dotfile="$2"
            _link_location="$3"
            shift 2
            ;;
        *)
            usage
            ;;
    esac
    shift
done


# Prepare files and directories
init() {
    mkdir -p "$backup_dir" "$backup_files_dir"
    touch "$backup_list"
}


list() {
    cat "$backup_list"
}


# Restore one backup to its previous location
unglue() {
    local location=$(echo $(cd $(dirname "$1") && pwd -P)/$(basename "$1"))
    local backup="${backup_files_dir}/${location}"
    
    sudo cp -P --remove-destination "$backup" "$location"
}


restore() {
    # Unglue all backups
    for file in "$(cat "$backup_list")"; do
	unglue file
    done

    # Remove backups
    sudo rm -rf "${backup_dir}/*"

    # Clear backup list
    echo -n > "$backup_list"
}


# Make hard link to dotfile at location with backup
glue() {
    # Fail if not given exactly 3 arguments
    [ $# -eq 3 ] || return 1

    sudo mkdir -p "$(dirname "$3")"

    # Get absolute path of arguments
    local dotfile=$(echo $(cd $(dirname "$2") && pwd -P)/$(basename "$2"))
    local location=$(echo $(cd $(dirname "$3") && pwd -P)/$(basename "$3"))

    echo "$location"

    # Back up an existing file or directory from location if no existing backup
    if [ -e "$location" ] && ! grep -Fxq "$location" "$backup_list"; then
        sudo rm -rf "${backup_files_dir}/${location}"
        sudo cp -rP --parents "$location" "$backup_files_dir"

	# Append location to backup list
	echo "$location" >> "$backup_list"
    fi

    sudo rm -rf "$location"
    eval sudo $1 "$dotfile" "$location"
    sudo chown --no-dereference --reference="$dotfile" "$location"
}


# Dispatch
[ -n "$_init" ] && init
[ -n "$_list" ] && list
[ -n "$_restore" ] && restore
[ -n "$_sym" ] && glue 'ln -srf' $_sym_dotfile $_sym_location
[ -n "$_link" ] && glue 'cp -lrf --preserve=all' $_link_dotfile $_link_location
[ -n "$_copy" ] && glue 'cp -rf --preserve=all' $_copy_dotfile $_copy_location

exit 0
