#!/usr/bin/env bash

set -eu
# set -x

usage() {
    printf "Usage: "$0" <command> [arguments]

Description: Activate a dotfile symlink safely

Available commands:

    init
      + Initialize files and directories
    activate <dotfile> <location>
      + Activate a symlink
    list
      + List glued locations
    restore
      + Restore backups
"
    exit 1
}

[ $# -ge 1 ] || usage


BACKUP_DIR="${HOME}/.dotfiles/backup"
BACKUP_FILES_DIR="${BACKUP_DIR}/files"
BACKUP_LIST="${BACKUP_DIR}/list"


# Prepare files and directories
init() {
    mkdir -p "${BACKUP_DIR}" "${BACKUP_FILES_DIR}"
    touch "${BACKUP_LIST}"
}


# Make symlink with backup
glue() {
    # Fail if not given exactly 2 arguments
    [ $# -eq 2 ] || return 1

    # Get absolute path of arguments
    dotfile=$(echo $(cd $(dirname "$1") && pwd -P)/$(basename "$1"))
    location=$(echo $(cd $(dirname "$2") && pwd -P)/$(basename "$2"))

    echo "${location}"
    
    # Do nothing if location already points to dotfile
    [ -h "${location}" ] && [ "$(realpath -m ${location})" -ef "${dotfile}" ] && return 0

    # Back up an existing file or directory at location
    if [ -e "${location}" ]; then
        rm -rf "${BACKUP_FILES_DIR}/${location}"
        sudo cp -rP --parents "${location}" "${BACKUP_FILES_DIR}"

	# Append location to backup list
	echo "${location}" >> "${BACKUP_LIST}"
    fi

    # Make room for dotfile at location
    sudo rm -rf "${location}"
    
    # Link location to dotfile (preserving owner)
    sudo ln -rs "${dotfile}" "${location}"
    sudo chown -h --reference="${dotfile}" "${location}"
}


list() {
    cat "${BACKUP_LIST}"
}


# Restore one backup to its previous location
unglue() {
    location=$(echo $(cd $(dirname "$1") && pwd -P)/$(basename "$1"))
    backup="${BACKUP_FILES_DIR}/${location}"
    
    sudo cp -P --remove-destination "${backup}" "${location}"
}


restore() {
    # Unglue all backups
    for file in "$(cat "${BACKUP_LIST}")"; do
	unglue file
    done

    # Remove backups
    sudo rm -rf "${BACKUP_DIR}/*"

    # Clear backup list
    echo -n > "${BACKUP_LIST}"
}


# Dispatch
case "$1" in
    init)
	[ $# -eq 1 ] || usage
	init
	;;
    activate)
	[ $# -eq 3 ] || usage
	glue "$2" "$3"
	;;
    list)
	[ $# -eq 1 ] || usage
	list
	;;
    restore)
	[ $# -eq 1 ] || usage
	restore
	;;
    *)
	usage
esac

exit 0
